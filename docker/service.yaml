apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pv-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-db
spec:
  selector:
    matchLabels:
      app: redis-db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: redis-db
    spec:
      containers:
        - image: redis:7.0.5
          name: redis-db
          ports:
            - containerPort: 6379
              name: redis-db
          volumeMounts:
            - name: redis-persistent-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: redis-persistent-storage
          persistentVolumeClaim:
            claimName: redis-pv-claim

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: express-rate-limiter
spec:
  minReadySeconds: 30
  selector:
    matchLabels:
      app: express-rate-limiter
  replicas: 3
  template:
    metadata:
      labels:
        app: express-rate-limiter
    spec:
      containers:
        - name: express-rate-limiter
          image: express-rate-limiter:local
          imagePullPolicy: Never
          env:
            - name: "PORT"
              value: "8000"
            - name: "JWT"
              value: "test"
            - name: "REDIS_HTTP_HOST"
              value: "redis-db"
            - name: "LOG_LEVEL"
              value: "error"

---

apiVersion: v1
kind: Service
metadata:
  name: redis-db
spec:
  type: NodePort
  ports:
    - name: http
      port: 6379
      targetPort: 6379
  selector:
    app: redis-db

---

apiVersion: v1
kind: Service
metadata:
  name: express-rate-limiter-service

spec:
  selector:
    app: express-rate-limiter

  ports:
    - name: http
      port: 8000
      nodePort: 30000

  type: LoadBalancer
